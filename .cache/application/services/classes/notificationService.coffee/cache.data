var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

buzzlike.service('notificationService', function(account, itemService, rpc, socketAuth, notificationCenter, socketService, $rootScope, buffer, contentService) {
  var classEntity;
  classEntity = (function(superClass) {
    var takeToRigth, tokenMax, waitTokens;

    extend(classEntity, superClass);

    classEntity.prototype.itemType = 'notification';

    function classEntity() {
      classEntity.__super__.constructor.call(this);
      this.unread = {};
      this.byToken = {};
      socketAuth.onAuth((function(_this) {
        return function() {
          return _this.fetchNew();
        };
      })(this));
    }

    classEntity.prototype.handleItem = function(item) {
      var ref, saved;
      saved = classEntity.__super__.handleItem.call(this, item);
      if (saved.unread === true) {
        this.unread[saved.id] = saved;
      }
      if (saved.token != null) {
        this.byToken[saved.token] = saved;
      }
      if (waitTokens.length > 0) {
        if ((saved.token != null) && (ref = saved.token, indexOf.call(waitTokens, ref) >= 0)) {
          notificationCenter.addMessage(saved);
          removeElementFromArray(saved.token, waitTokens);
        }
      }
      if (account.user.settings.takeUploadToRight === true && saved.notificationType === 'upload') {
        if ((tokenMax[saved.token] != null) && saved.ids.length >= tokenMax[saved.token]) {
          takeToRigth(saved.ids, saved.token);
        }
      }
      return saved;
    };

    classEntity.prototype.onCreate = function(data) {
      var item;
      item = classEntity.__super__.onCreate.call(this, data);
      return notificationCenter.addMessage(item);
    };

    classEntity.prototype.removeCache = function(id) {
      var item;
      item = this.storage[id];
      if (this.unread[item.id] != null) {
        delete this.unread[item.id];
      }
      if (this.byToken[saved.token] != null) {
        delete this.byToken[saved.token];
      }
      return classEntity.__super__.removeCache.call(this, id);
    };

    classEntity.prototype.markRead = function(id, cb) {
      if (this.unread[id] != null) {
        delete this.unread[id];
      }
      return this.save({
        id: id,
        unread: false
      }, cb);
    };

    classEntity.prototype.markAllRead = function(cb) {
      return this.call('markAllRead', (function(_this) {
        return function() {
          return emptyObject(_this.unread);
        };
      })(this));
    };

    classEntity.prototype.fetchNew = function(cb) {
      return this.query({
        unread: true
      }, (function(_this) {
        return function(items, total) {
          return typeof cb === "function" ? cb(items, total) : void 0;
        };
      })(this));
    };

    tokenMax = {};

    takeToRigth = function(ids, token) {
      var items;
      delete tokenMax[token];
      return items = contentService.getByIds(ids, function(items) {
        return buffer.addItems(items);
      });
    };

    classEntity.prototype.setTokenMax = function(token, max) {
      var ref, ref1;
      if (((ref = this.byToken[token]) != null ? (ref1 = ref.ids) != null ? ref1.length : void 0 : void 0) >= max) {
        return takeToRigth(this.byToken[token].ids, token);
      } else {
        return tokenMax[token] = max;
      }
    };

    waitTokens = [];

    classEntity.prototype.showNotificationByToken = function(token) {
      if (this.byToken[token] != null) {
        return notificationCenter.addMessage(this.byToken[token]);
      } else {
        return waitTokens.push(token);
      }
    };

    return classEntity;

  })(itemService);
  return new classEntity();
});
