tC['/novaStreamItemSmartView/template.jade'] = "<div ng-if=\"item.smartDate\" class=\"smartDate\">{{::item.created | timestampMask:'D ofMMMM optYY, hh:mm'}}</div> <div ng-switch=\"item.streamItemType\"> <div ng-switch-default=\"ng-switch-default\" class=\"userMessage\"> <div class=\"messageTime\">{{::item.created | timestampMask:'hh:mm'}}</div> <div ng-if=\"!mine\" class=\"userPicSide\"> <div nova-item-object=\"user\" nova-item-preview-type=\"simple\" class=\"novaItem novaItemScope novaItemPreview novaItemDraggable\"></div> </div> <div class=\"messageSide\"> <div class=\"userName\">{{user.name}}    </div> <div class=\"message\"> <div class=\"messageText\"> <div ng-repeat=\"part in item.items\" class=\"messagePart\"> <div>{{part.value}}</div> <div ng-if=\"part.entities.length &gt; 0\" class=\"messageAttachments novaMultiselect\"> <div ng-repeat=\"entity in part.entities\" nova-item-id=\"entity.id\" nova-item-type=\"{{::entity.type}}\" class=\"novaItem novaItemPreview novaItemSelectable novaItemDraggable\"></div> </div> </div> </div> </div> </div> </div> <div ng-switch-when=\"system\" class=\"systemMessage\"> <div class=\"messageTime\">{{::item.created | timestampMask:'hh:mm'}}</div><span class=\"userName\">{{user.name}}</span><span stream-item=\"item\" class=\"novaStreamItemSystemMessage\"></span> </div> <div ng-switch-when=\"project\" class=\"systemMessage\"> <div class=\"messageTime\">{{::item.created | timestampMask:'hh:mm'}}</div><span ng-if=\"me != true\" class=\"userName\">{{user.name}}</span><span ng-if=\"me == true\" translate=\"'streamMessage_me'\" class=\"userName\"></span><span stream-item=\"item\" class=\"novaStreamItemProjectMessage\"></span> </div> </div>";

buzzlike.directive('novaStreamItemSmartView', function(account, userService) {
  return {
    restrict: 'C',
    template: tC['/novaStreamItemSmartView/template.jade'],
    link: function(scope, element, attrs, ngModel) {
      var elem;
      elem = $(element);
      if (scope.appItem.profileUserId != null) {
        if (scope.item.userId === account.user.id) {
          scope.me = true;
        }
      }
      scope.user = userService.getById(scope.item.userId);
      if (scope.item.userId === account.user.id) {
        scope.mine = true;
        return elem.addClass('mine');
      }
    }
  };
});

registerStyles('novaStreamItemSmartView', ".novaStreamItemSmartView.mine .userMessage .messageTime {\n  top: 10px;\n}\n.novaStreamItemSmartView.mine .userMessage .userPicSide {\n  display: none;\n}\n.novaStreamItemSmartView.mine .userMessage .messageSide {\n  float: right;\n  margin-right: 45px;\n}\n.novaStreamItemSmartView.mine .userMessage .messageSide .message {\n  background: #3496f2;\n  color: #fff;\n}\n.novaStreamItemSmartView.mine .userMessage .messageSide .message .messageText {\n  font-weight: 400;\n}\n.novaStreamItemSmartView.mine .userMessage .messageSide .userName {\n  display: none;\n}\n.novaStreamItemSmartView .smartDate {\n  text-align: center;\n  font-size: 12px;\n  color: #bbb;\n  margin: 15px 0 12px 0;\n}\n.novaStreamItemSmartView .messageTime {\n  position: absolute;\n  right: 10px;\n  top: 20px;\n  font-size: 9px;\n  color: #444;\n}\n.novaStreamItemSmartView .userMessage {\n  overflow: hidden;\n  margin-bottom: 5px;\n}\n.novaStreamItemSmartView .userMessage .userPicSide {\n  float: left;\n  width: 35px;\n  min-height: 35px;\n}\n.novaStreamItemSmartView .userMessage .userPicSide .novaItem {\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  top: 10px;\n  right: 0px;\n}\n.novaStreamItemSmartView .userMessage .messageSide {\n  float: left;\n  max-width: 70%;\n}\n.novaStreamItemSmartView .userMessage .messageSide .userName {\n  font-size: 10px;\n  font-weight: 500;\n  color: #444;\n  margin: 11px 0 0 15px;\n}\n.novaStreamItemSmartView .userMessage .messageSide .message {\n  background: #efefef;\n  padding: 5px 10px;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  margin: 2px 0 0 11px;\n  font-size: 11px;\n  line-height: 13px;\n  font-weight: 400;\n  white-space: pre-line;\n}\n.novaStreamItemSmartView .userMessage .messageSide .message .messagePart {\n  padding-bottom: 2px;\n  margin-bottom: 2px;\n  border-bottom: 1px solid rgba(255,255,255,0.2);\n}\n.novaStreamItemSmartView .userMessage .messageSide .message .messagePart:last-child {\n  border-bottom: none;\n  margin-bottom: 0;\n  padding-bottom: 0;\n}\n.novaStreamItemSmartView .userMessage .messageSide .message .messagePart .messageAttachments {\n  overflow: hidden;\n}\n.novaStreamItemSmartView .userMessage .messageSide .message .messagePart .messageAttachments .novaItem {\n  float: left;\n  width: 110px;\n  height: 83px;\n  margin: 5px;\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  overflow: hidden;\n  -webkit-transform: translate3d(0, 0, 0);\n  -moz-transform: translate3d(0, 0, 0);\n  -o-transform: translate3d(0, 0, 0);\n  -ms-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n}\n.novaStreamItemSmartView .systemMessage {\n  text-align: center;\n  padding: 10px 35px;\n  line-height: 13px;\n}\n.novaStreamItemSmartView .systemMessage span {\n  font-size: 10px;\n  font-weight: 400;\n}\n.novaStreamItemSmartView .systemMessage .messageTime {\n  top: 10px;\n}\n.novaStreamItemSmartView .systemMessage .userName {\n  margin-right: 3px;\n}\n");
