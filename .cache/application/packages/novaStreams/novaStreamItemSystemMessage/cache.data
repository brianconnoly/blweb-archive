tC['/novaStreamItemSystemMessage/template.jade'] = "<span translate=\"'streamMessage_' + streamItem.value + (streamItem.items.length &gt; 1 ? 's' : '')\" translate-capitalize=\"{{::capitalize}}\" class=\"text\"></span><span ng-repeat=\"parent in uniqParents\" class=\"parentName\"> \"{{trim(getParent(parent).name, $index)}}\"</span> <div ng-class=\"{'center':streamItem.items.length &lt; 3}\" class=\"entities novaMultiselect\"> <div ng-repeat=\"realItem in streamItem.items track by realItem.id\" class=\"realStreamItem item_type_{{::realItem.data.type}}\"> <div ng-repeat=\"id in realItem.data.ids\" nova-item-id=\"id\" nova-item-type=\"{{::realItem.data.type}}\" nova-item-context=\"parent\" class=\"streamEntity novaItem novaItemPreview novaItemSelectable novaItemDraggable novaItemDroppable\"></div> </div> </div>";

buzzlike.directive('novaStreamItemSystemMessage', function(operationsService, $parse) {
  return {
    restrict: 'C',
    template: tC['/novaStreamItemSystemMessage/template.jade'],
    link: function(scope, element, attrs, ngModel) {
      if (attrs.streamItem != null) {
        scope.streamItem = $parse(attrs.streamItem)(scope);
      }
      scope.parent = operationsService.get(scope.streamItem.parent.type, scope.streamItem.parent.id);
      scope.uniqParents = [];
      scope.$watch('streamItem.items', function(nVal) {
        var i, item, k, len, map, ref, ref1, ref2, results, v;
        if (!((nVal != null ? nVal.length : void 0) > 0)) {
          return;
        }
        map = {};
        scope.uniqParents.length = 0;
        ref = scope.streamItem.items;
        for (i = 0, len = ref.length; i < len; i++) {
          item = ref[i];
          if (item.parent.id !== scope.appItem.id && ((((ref1 = scope.flowFrame) != null ? (ref2 = ref1.item) != null ? ref2.id : void 0 : void 0) == null) || scope.flowFrame.item.id !== item.parent.id)) {
            map[item.parent.id] = item.parent;
          }
        }
        results = [];
        for (k in map) {
          v = map[k];
          results.push(scope.uniqParents.push(v));
        }
        return results;
      }, 0);
      scope.getParent = function(parent) {
        return operationsService.get(parent.type, parent.id);
      };
      return scope.trim = function(str, index) {
        return $.trim(str) + (index < scope.uniqParents.length - 1 ? ',' : '');
      };
    }
  };
});

registerStyles('novaStreamItemSystemMessage', ".novaStreamItemSystemMessage .entities {\n  padding: 5px 10px;\n  overflow: hidden;\n  text-align: left;\n}\n.novaStreamItemSystemMessage .entities.center {\n  text-align: center;\n}\n.novaStreamItemSystemMessage .entities .streamEntity {\n  width: 80px;\n  height: 60px;\n  margin: 6px;\n  display: inline-block;\n  text-align: left;\n  -webkit-box-shadow: 0 0 5px 0 rgba(0,0,0,0.4);\n  box-shadow: 0 0 5px 0 rgba(0,0,0,0.4);\n  -webkit-border-radius: 5px;\n  border-radius: 5px;\n  overflow: hidden;\n  -webkit-transform: translate3d(0, 0, 0);\n  -moz-transform: translate3d(0, 0, 0);\n  -o-transform: translate3d(0, 0, 0);\n  -ms-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n}\n.novaStreamItemSystemMessage .entities .realStreamItem {\n  display: inline-block;\n}\n.novaStreamItemSystemMessage .entities .realStreamItem.item_type_user .streamEntity {\n  width: auto;\n  height: auto;\n  margin: 5px;\n  display: inline-block;\n  text-align: left;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  overflow: hidden;\n  -webkit-transform: translate3d(0, 0, 0);\n  -moz-transform: translate3d(0, 0, 0);\n  -o-transform: translate3d(0, 0, 0);\n  -ms-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n}\n.novaStreamItemSystemMessage .entities .realStreamItem.item_type_user .streamEntity .avatarWrapper {\n  margin: 10px 20px;\n  opacity: 1;\n  -ms-filter: none;\n  filter: none;\n  -webkit-transition: opacity 0.2s ease;\n  -moz-transition: opacity 0.2s ease;\n  -o-transition: opacity 0.2s ease;\n  -ms-transition: opacity 0.2s ease;\n  transition: opacity 0.2s ease;\n}\n.novaStreamItemSystemMessage .entities .realStreamItem.item_type_user .streamEntity .userName {\n  width: 100%;\n  margin-bottom: 10px;\n}\n");
