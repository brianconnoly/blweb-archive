var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

buzzlike.service('accountService', function(itemService, account) {
  var accountService;
  accountService = (function(superClass) {
    extend(accountService, superClass);

    accountService.prototype.itemType = 'account';

    function accountService() {
      accountService.__super__.constructor.call(this);
    }

    accountService.prototype.fetchById = function(id, cb) {
      var acc, handled, i, len, ref;
      console.log(id);
      ref = account.user.accounts;
      for (i = 0, len = ref.length; i < len; i++) {
        acc = ref[i];
        if (acc.publicId === id) {
          handled = this.handleItem(acc);
          if (typeof cb === "function") {
            cb(handled);
          }
          return handled;
        }
      }
      handled = this.handleItem({
        id: id
      });
      if (typeof cb === "function") {
        cb(handled);
      }
      return handled;
    };

    return accountService;

  })(itemService);
  return new accountService();
});
