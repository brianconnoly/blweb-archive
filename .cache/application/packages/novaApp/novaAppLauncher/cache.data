tC['/novaAppLauncher/template.jade'] = " ";

buzzlike.directive('novaAppLauncher', function($parse, $compile) {
  return {
    restrict: 'C',
    template: tC['/novaAppLauncher/template.jade'],
    link: function(scope, element, attrs, ngModel) {
      var elem, launcherItem, tmpl;
      elem = $(element);
      setTimeout(function() {
        return elem.addClass('created');
      }, 0);
      if (!scope.session) {
        scope.session = $parse(attrs.session)(scope);
      }
      if (attrs.appData != null) {
        scope.appData = $parse(attrs.appData)(scope);
      } else {
        scope.appData = scope.session;
      }
      scope.$watch('session.closing', function(nVal) {
        if (nVal === true) {
          return elem.removeClass('created');
        }
      });
      if (scope.appData.item != null) {
        elem.addClass(scope.appData.item.type + '_' + scope.appData.item.id);
      }
      launcherItem = $('<div>', {
        "class": scope.appData.app + 'Launcher' + ' appLauncherContents'
      });
      tmpl = tC['/' + scope.appData.app + 'Launcher' + '/template.jade'];
      if (tmpl != null) {
        launcherItem.append(tmpl);
      }
      elem.append(launcherItem);
      return $compile(launcherItem)(scope);
    }
  };
});

registerStyles('novaAppLauncher', ".novaAppLauncher .appLauncherContents {\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n.novaAppLauncher .appLauncherContents .novaItem {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n");
