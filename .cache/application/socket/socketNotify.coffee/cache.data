buzzlike.service('socketNotify', function(notificationCenter, socketService, $rootScope, account, localization) {
  var socketNotify;
  socketNotify = (function() {
    function socketNotify() {
      return;
      socketService.on('push', function(data) {
        var message;
        message = {
          time: 30 * SEC,
          solid: true
        };
        switch (data.type) {
          case 'repostRequest':
            message.item = {
              type: 'community',
              id: data.data.communityId
            };
            message.realText = 'Новая заявка на размещение рекламы.';
            if (data.data.cost > 0) {
              message.realText += ' Стоимость размещения: ' + data.data.cost + 'р.';
            }
            break;
          case 'returnRequest':
            message.item = {
              type: 'lot',
              id: data.data.lotId
            };
            message.realText = 'Встречное предложение по вашей заявке.';
            if (data.data.cost > 0) {
              message.realText += ' Стоимость размещения: ' + data.data.cost + 'р.';
            }
            break;
          case 'acceptRequest':
            message.item = {
              type: 'lot',
              id: data.data.lotId
            };
            message.realText = 'Размещение рекламы в сообщество "' + data.data.communityTitle + '" одобрено!';
            if (data.data.cost > 0) {
              message.realText += ' Стоимость размещения: ' + data.data.cost + 'р.';
            }
            break;
          case 'rejectRequest':
            message.item = {
              type: 'lot',
              id: data.data.lotId
            };
            message.realText = 'Размещение рекламы в сообщество "' + data.data.communityTitle + '" отклонено.';
            break;
          case 'acceptLot':
            message.item = {
              type: 'lot',
              id: data.data.lotId
            };
            message.realText = 'Размещение рекламы в маркет одобрено.';
            break;
          case 'rejectLot':
            message.item = {
              type: 'lot',
              id: data.data.lotId
            };
            message.realText = 'Размещение рекламы в маркет отклонено.';
            message.realText += ' Причина: ' + data.data.status + '.';
            break;
          case 'postingError':
            message.item = {
              type: 'post',
              id: data.data.postId
            };
            message.realText = 'Пост на ' + data.data.timestamp + ' не вышел (.';
            message.realText += ' Причина: ' + localization.translate('posting_error_' + data.data.error.error)['caption'] + '.';
        }
        notificationCenter.addMessage(message);
        return $rootScope.$apply();
      });
    }

    return socketNotify;

  })();
  return new socketNotify();
});
